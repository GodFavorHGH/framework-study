<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.haugv.service.impl"></context:component-scan>
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="dubbo-order-service"/>
    <!-- 使用multicast广播注册中心暴露发现服务地址 -->
    <dubbo:registry protocol="zookeeper" address="zookeeper://127.0.0.1:2181"/>
    <!-- 用dubbo协议在29014端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="29014" />

    <!--本应用（作为服务提供者）对外暴露的接口start-->
<!--    <dubbo:service interface="com.haugv.service.order.OrderService" ref="orderService" />-->
    <!-- 具体的实现bean -->
<!--    <bean id="orderService" class="com.haugv.service.impl.OrderServiceImpl" />-->
    <!--本应用对外暴露的接口end-->

    <!--本应用（作为服务消费者）调用其他应用的服务start-->
    <dubbo:reference id="accountService" interface="com.haugv.service.account.AccountService" />
    <dubbo:reference id="stockService" interface="com.haugv.service.stock.StockService" />
    <!--本应用调用其他应用的服务end-->
</beans>